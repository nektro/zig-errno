const std = @import("std");
const string = []const u8;
const builtin = @import("builtin");

pub const Enum = switch (builtin.target.os.tag) {
    .linux => switch (builtin.target.cpu.arch) {
        .arc,
        .arm,
        .armeb,
        .aarch64,
        .aarch64_be,
        .aarch64_32,
        .csky,
        .hexagon,
        .loongarch32,
        .loongarch64,
        .m68k,
        .riscv32,
        .riscv64,
        .s390x,
        .sparc,
        .sparc64,
        .sparcel,
        .x86,
        .x86_64,
        .xtensa,
        => enum(c_ushort) {
            EPERM = 1,
            ENOENT = 2,
            ESRCH = 3,
            EINTR = 4,
            EIO = 5,
            ENXIO = 6,
            E2BIG = 7,
            ENOEXEC = 8,
            EBADF = 9,
            ECHILD = 10,
            EAGAIN = 11,
            ENOMEM = 12,
            EACCES = 13,
            EFAULT = 14,
            ENOTBLK = 15,
            EBUSY = 16,
            EEXIST = 17,
            EXDEV = 18,
            ENODEV = 19,
            ENOTDIR = 20,
            EISDIR = 21,
            EINVAL = 22,
            ENFILE = 23,
            EMFILE = 24,
            ENOTTY = 25,
            ETXTBSY = 26,
            EFBIG = 27,
            ENOSPC = 28,
            ESPIPE = 29,
            EROFS = 30,
            EMLINK = 31,
            EPIPE = 32,
            EDOM = 33,
            ERANGE = 34,
            EDEADLK = 35,
            ENAMETOOLONG = 36,
            ENOLCK = 37,
            ENOSYS = 38,
            ENOTEMPTY = 39,
            ELOOP = 40,
            ENOMSG = 42,
            EIDRM = 43,
            ECHRNG = 44,
            EL2NSYNC = 45,
            EL3HLT = 46,
            EL3RST = 47,
            ELNRNG = 48,
            EUNATCH = 49,
            ENOCSI = 50,
            EL2HLT = 51,
            EBADE = 52,
            EBADR = 53,
            EXFULL = 54,
            ENOANO = 55,
            EBADRQC = 56,
            EBADSLT = 57,
            EBFONT = 59,
            ENOSTR = 60,
            ENODATA = 61,
            ETIME = 62,
            ENOSR = 63,
            ENONET = 64,
            ENOPKG = 65,
            EREMOTE = 66,
            ENOLINK = 67,
            EADV = 68,
            ESRMNT = 69,
            ECOMM = 70,
            EPROTO = 71,
            EMULTIHOP = 72,
            EDOTDOT = 73,
            EBADMSG = 74,
            EOVERFLOW = 75,
            ENOTUNIQ = 76,
            EBADFD = 77,
            EREMCHG = 78,
            ELIBACC = 79,
            ELIBBAD = 80,
            ELIBSCN = 81,
            ELIBMAX = 82,
            ELIBEXEC = 83,
            EILSEQ = 84,
            ERESTART = 85,
            ESTRPIPE = 86,
            EUSERS = 87,
            ENOTSOCK = 88,
            EDESTADDRREQ = 89,
            EMSGSIZE = 90,
            EPROTOTYPE = 91,
            ENOPROTOOPT = 92,
            EPROTONOSUPPORT = 93,
            ESOCKTNOSUPPORT = 94,
            EOPNOTSUPP = 95,
            EPFNOSUPPORT = 96,
            EAFNOSUPPORT = 97,
            EADDRINUSE = 98,
            EADDRNOTAVAIL = 99,
            ENETDOWN = 100,
            ENETUNREACH = 101,
            ENETRESET = 102,
            ECONNABORTED = 103,
            ECONNRESET = 104,
            ENOBUFS = 105,
            EISCONN = 106,
            ENOTCONN = 107,
            ESHUTDOWN = 108,
            ETOOMANYREFS = 109,
            ETIMEDOUT = 110,
            ECONNREFUSED = 111,
            EHOSTDOWN = 112,
            EHOSTUNREACH = 113,
            EALREADY = 114,
            EINPROGRESS = 115,
            ESTALE = 116,
            EUCLEAN = 117,
            ENOTNAM = 118,
            ENAVAIL = 119,
            EISNAM = 120,
            EREMOTEIO = 121,
            EDQUOT = 122,
            ENOMEDIUM = 123,
            EMEDIUMTYPE = 124,
            ECANCELED = 125,
            ENOKEY = 126,
            EKEYEXPIRED = 127,
            EKEYREVOKED = 128,
            EKEYREJECTED = 129,
            EOWNERDEAD = 130,
            ENOTRECOVERABLE = 131,
            ERFKILL = 132,
            EHWPOISON = 133,
            _,
            pub const EWOULDBLOCK: Enum = .EAGAIN;
            pub const EDEADLOCK: Enum = .EDEADLK;
            pub const ENOTSUP: Enum = .EOPNOTSUPP;
        },
        .mips,
        .mipsel,
        => enum(c_ushort) {
            EPERM = 1,
            ENOENT = 2,
            ESRCH = 3,
            EINTR = 4,
            EIO = 5,
            ENXIO = 6,
            E2BIG = 7,
            ENOEXEC = 8,
            EBADF = 9,
            ECHILD = 10,
            EAGAIN = 11,
            ENOMEM = 12,
            EACCES = 13,
            EFAULT = 14,
            ENOTBLK = 15,
            EBUSY = 16,
            EEXIST = 17,
            EXDEV = 18,
            ENODEV = 19,
            ENOTDIR = 20,
            EISDIR = 21,
            EINVAL = 22,
            ENFILE = 23,
            EMFILE = 24,
            ENOTTY = 25,
            ETXTBSY = 26,
            EFBIG = 27,
            ENOSPC = 28,
            ESPIPE = 29,
            EROFS = 30,
            EMLINK = 31,
            EPIPE = 32,
            EDOM = 33,
            ERANGE = 34,
            ENOMSG = 35,
            EIDRM = 36,
            ECHRNG = 37,
            EL2NSYNC = 38,
            EL3HLT = 39,
            EL3RST = 40,
            ELNRNG = 41,
            EUNATCH = 42,
            ENOCSI = 43,
            EL2HLT = 44,
            EDEADLK = 45,
            ENOLCK = 46,
            EBADE = 50,
            EBADR = 51,
            EXFULL = 52,
            ENOANO = 53,
            EBADRQC = 54,
            EBADSLT = 55,
            EDEADLOCK = 56,
            EBFONT = 59,
            ENOSTR = 60,
            ENODATA = 61,
            ETIME = 62,
            ENOSR = 63,
            ENONET = 64,
            ENOPKG = 65,
            EREMOTE = 66,
            ENOLINK = 67,
            EADV = 68,
            ESRMNT = 69,
            ECOMM = 70,
            EPROTO = 71,
            EDOTDOT = 73,
            EMULTIHOP = 74,
            EBADMSG = 77,
            ENAMETOOLONG = 78,
            EOVERFLOW = 79,
            ENOTUNIQ = 80,
            EBADFD = 81,
            EREMCHG = 82,
            ELIBACC = 83,
            ELIBBAD = 84,
            ELIBSCN = 85,
            ELIBMAX = 86,
            ELIBEXEC = 87,
            EILSEQ = 88,
            ENOSYS = 89,
            ELOOP = 90,
            ERESTART = 91,
            ESTRPIPE = 92,
            ENOTEMPTY = 93,
            EUSERS = 94,
            ENOTSOCK = 95,
            EDESTADDRREQ = 96,
            EMSGSIZE = 97,
            EPROTOTYPE = 98,
            ENOPROTOOPT = 99,
            EPROTONOSUPPORT = 120,
            ESOCKTNOSUPPORT = 121,
            EOPNOTSUPP = 122,
            EPFNOSUPPORT = 123,
            EAFNOSUPPORT = 124,
            EADDRINUSE = 125,
            EADDRNOTAVAIL = 126,
            ENETDOWN = 127,
            ENETUNREACH = 128,
            ENETRESET = 129,
            ECONNABORTED = 130,
            ECONNRESET = 131,
            ENOBUFS = 132,
            EISCONN = 133,
            ENOTCONN = 134,
            EUCLEAN = 135,
            ENOTNAM = 137,
            ENAVAIL = 138,
            EISNAM = 139,
            EREMOTEIO = 140,
            ESHUTDOWN = 143,
            ETOOMANYREFS = 144,
            ETIMEDOUT = 145,
            ECONNREFUSED = 146,
            EHOSTDOWN = 147,
            EHOSTUNREACH = 148,
            EALREADY = 149,
            EINPROGRESS = 150,
            ESTALE = 151,
            ECANCELED = 158,
            ENOMEDIUM = 159,
            EMEDIUMTYPE = 160,
            ENOKEY = 161,
            EKEYEXPIRED = 162,
            EKEYREVOKED = 163,
            EKEYREJECTED = 164,
            EOWNERDEAD = 165,
            ENOTRECOVERABLE = 166,
            ERFKILL = 167,
            EHWPOISON = 168,
            EDQUOT = 1133,
            _,
            pub const ENOTSUP: Enum = .EOPNOTSUPP;
            pub const EWOULDBLOCK: Enum = .EAGAIN;
        },
        .mips64,
        .mips64el,
        => enum(c_ushort) {
            EPERM = 1,
            ENOENT = 2,
            ESRCH = 3,
            EINTR = 4,
            EIO = 5,
            ENXIO = 6,
            E2BIG = 7,
            ENOEXEC = 8,
            EBADF = 9,
            ECHILD = 10,
            EAGAIN = 11,
            ENOMEM = 12,
            EACCES = 13,
            EFAULT = 14,
            ENOTBLK = 15,
            EBUSY = 16,
            EEXIST = 17,
            EXDEV = 18,
            ENODEV = 19,
            ENOTDIR = 20,
            EISDIR = 21,
            EINVAL = 22,
            ENFILE = 23,
            EMFILE = 24,
            ENOTTY = 25,
            ETXTBSY = 26,
            EFBIG = 27,
            ENOSPC = 28,
            ESPIPE = 29,
            EROFS = 30,
            EMLINK = 31,
            EPIPE = 32,
            EDOM = 33,
            ERANGE = 34,
            ENOMSG = 35,
            EIDRM = 36,
            ECHRNG = 37,
            EL2NSYNC = 38,
            EL3HLT = 39,
            EL3RST = 40,
            ELNRNG = 41,
            EUNATCH = 42,
            ENOCSI = 43,
            EL2HLT = 44,
            EDEADLK = 45,
            ENOLCK = 46,
            EBADE = 50,
            EBADR = 51,
            EXFULL = 52,
            ENOANO = 53,
            EBADRQC = 54,
            EBADSLT = 55,
            EDEADLOCK = 56,
            EBFONT = 59,
            ENOSTR = 60,
            ENODATA = 61,
            ETIME = 62,
            ENOSR = 63,
            ENONET = 64,
            ENOPKG = 65,
            EREMOTE = 66,
            ENOLINK = 67,
            EADV = 68,
            ESRMNT = 69,
            ECOMM = 70,
            EPROTO = 71,
            EDOTDOT = 73,
            EMULTIHOP = 74,
            EBADMSG = 77,
            ENAMETOOLONG = 78,
            EOVERFLOW = 79,
            ENOTUNIQ = 80,
            EBADFD = 81,
            EREMCHG = 82,
            ELIBACC = 83,
            ELIBBAD = 84,
            ELIBSCN = 85,
            ELIBMAX = 86,
            ELIBEXEC = 87,
            EILSEQ = 88,
            ENOSYS = 89,
            ELOOP = 90,
            ERESTART = 91,
            ESTRPIPE = 92,
            ENOTEMPTY = 93,
            EUSERS = 94,
            ENOTSOCK = 95,
            EDESTADDRREQ = 96,
            EMSGSIZE = 97,
            EPROTOTYPE = 98,
            ENOPROTOOPT = 99,
            EPROTONOSUPPORT = 120,
            ESOCKTNOSUPPORT = 121,
            EOPNOTSUPP = 122,
            EPFNOSUPPORT = 123,
            EAFNOSUPPORT = 124,
            EADDRINUSE = 125,
            EADDRNOTAVAIL = 126,
            ENETDOWN = 127,
            ENETUNREACH = 128,
            ENETRESET = 129,
            ECONNABORTED = 130,
            ECONNRESET = 131,
            ENOBUFS = 132,
            EISCONN = 133,
            ENOTCONN = 134,
            EUCLEAN = 135,
            ENOTNAM = 137,
            ENAVAIL = 138,
            EISNAM = 139,
            EREMOTEIO = 140,
            ESHUTDOWN = 143,
            ETOOMANYREFS = 144,
            ETIMEDOUT = 145,
            ECONNREFUSED = 146,
            EHOSTDOWN = 147,
            EHOSTUNREACH = 148,
            EALREADY = 149,
            EINPROGRESS = 150,
            ESTALE = 151,
            ECANCELED = 158,
            ENOMEDIUM = 159,
            EMEDIUMTYPE = 160,
            ENOKEY = 161,
            EKEYEXPIRED = 162,
            EKEYREVOKED = 163,
            EKEYREJECTED = 164,
            EOWNERDEAD = 165,
            ENOTRECOVERABLE = 166,
            ERFKILL = 167,
            EHWPOISON = 168,
            EDQUOT = 1133,
            _,
            pub const ENOTSUP: Enum = .EOPNOTSUPP;
            pub const EWOULDBLOCK: Enum = .EAGAIN;
        },
        .powerpc,
        .powerpcle,
        => enum(c_ushort) {
            EPERM = 1,
            ENOENT = 2,
            ESRCH = 3,
            EINTR = 4,
            EIO = 5,
            ENXIO = 6,
            E2BIG = 7,
            ENOEXEC = 8,
            EBADF = 9,
            ECHILD = 10,
            EAGAIN = 11,
            ENOMEM = 12,
            EACCES = 13,
            EFAULT = 14,
            ENOTBLK = 15,
            EBUSY = 16,
            EEXIST = 17,
            EXDEV = 18,
            ENODEV = 19,
            ENOTDIR = 20,
            EISDIR = 21,
            EINVAL = 22,
            ENFILE = 23,
            EMFILE = 24,
            ENOTTY = 25,
            ETXTBSY = 26,
            EFBIG = 27,
            ENOSPC = 28,
            ESPIPE = 29,
            EROFS = 30,
            EMLINK = 31,
            EPIPE = 32,
            EDOM = 33,
            ERANGE = 34,
            EDEADLK = 35,
            ENAMETOOLONG = 36,
            ENOLCK = 37,
            ENOSYS = 38,
            ENOTEMPTY = 39,
            ELOOP = 40,
            ENOMSG = 42,
            EIDRM = 43,
            ECHRNG = 44,
            EL2NSYNC = 45,
            EL3HLT = 46,
            EL3RST = 47,
            ELNRNG = 48,
            EUNATCH = 49,
            ENOCSI = 50,
            EL2HLT = 51,
            EBADE = 52,
            EBADR = 53,
            EXFULL = 54,
            ENOANO = 55,
            EBADRQC = 56,
            EBADSLT = 57,
            EDEADLOCK = 58,
            EBFONT = 59,
            ENOSTR = 60,
            ENODATA = 61,
            ETIME = 62,
            ENOSR = 63,
            ENONET = 64,
            ENOPKG = 65,
            EREMOTE = 66,
            ENOLINK = 67,
            EADV = 68,
            ESRMNT = 69,
            ECOMM = 70,
            EPROTO = 71,
            EMULTIHOP = 72,
            EDOTDOT = 73,
            EBADMSG = 74,
            EOVERFLOW = 75,
            ENOTUNIQ = 76,
            EBADFD = 77,
            EREMCHG = 78,
            ELIBACC = 79,
            ELIBBAD = 80,
            ELIBSCN = 81,
            ELIBMAX = 82,
            ELIBEXEC = 83,
            EILSEQ = 84,
            ERESTART = 85,
            ESTRPIPE = 86,
            EUSERS = 87,
            ENOTSOCK = 88,
            EDESTADDRREQ = 89,
            EMSGSIZE = 90,
            EPROTOTYPE = 91,
            ENOPROTOOPT = 92,
            EPROTONOSUPPORT = 93,
            ESOCKTNOSUPPORT = 94,
            EOPNOTSUPP = 95,
            EPFNOSUPPORT = 96,
            EAFNOSUPPORT = 97,
            EADDRINUSE = 98,
            EADDRNOTAVAIL = 99,
            ENETDOWN = 100,
            ENETUNREACH = 101,
            ENETRESET = 102,
            ECONNABORTED = 103,
            ECONNRESET = 104,
            ENOBUFS = 105,
            EISCONN = 106,
            ENOTCONN = 107,
            ESHUTDOWN = 108,
            ETOOMANYREFS = 109,
            ETIMEDOUT = 110,
            ECONNREFUSED = 111,
            EHOSTDOWN = 112,
            EHOSTUNREACH = 113,
            EALREADY = 114,
            EINPROGRESS = 115,
            ESTALE = 116,
            EUCLEAN = 117,
            ENOTNAM = 118,
            ENAVAIL = 119,
            EISNAM = 120,
            EREMOTEIO = 121,
            EDQUOT = 122,
            ENOMEDIUM = 123,
            EMEDIUMTYPE = 124,
            ECANCELED = 125,
            ENOKEY = 126,
            EKEYEXPIRED = 127,
            EKEYREVOKED = 128,
            EKEYREJECTED = 129,
            EOWNERDEAD = 130,
            ENOTRECOVERABLE = 131,
            ERFKILL = 132,
            EHWPOISON = 133,
            _,
            pub const EWOULDBLOCK: Enum = .EAGAIN;
            pub const ENOTSUP: Enum = .EOPNOTSUPP;
        },
        .powerpc64,
        .powerpc64le,
        => enum(c_ushort) {
            EPERM = 1,
            ENOENT = 2,
            ESRCH = 3,
            EINTR = 4,
            EIO = 5,
            ENXIO = 6,
            E2BIG = 7,
            ENOEXEC = 8,
            EBADF = 9,
            ECHILD = 10,
            EAGAIN = 11,
            ENOMEM = 12,
            EACCES = 13,
            EFAULT = 14,
            ENOTBLK = 15,
            EBUSY = 16,
            EEXIST = 17,
            EXDEV = 18,
            ENODEV = 19,
            ENOTDIR = 20,
            EISDIR = 21,
            EINVAL = 22,
            ENFILE = 23,
            EMFILE = 24,
            ENOTTY = 25,
            ETXTBSY = 26,
            EFBIG = 27,
            ENOSPC = 28,
            ESPIPE = 29,
            EROFS = 30,
            EMLINK = 31,
            EPIPE = 32,
            EDOM = 33,
            ERANGE = 34,
            EDEADLK = 35,
            ENAMETOOLONG = 36,
            ENOLCK = 37,
            ENOSYS = 38,
            ENOTEMPTY = 39,
            ELOOP = 40,
            ENOMSG = 42,
            EIDRM = 43,
            ECHRNG = 44,
            EL2NSYNC = 45,
            EL3HLT = 46,
            EL3RST = 47,
            ELNRNG = 48,
            EUNATCH = 49,
            ENOCSI = 50,
            EL2HLT = 51,
            EBADE = 52,
            EBADR = 53,
            EXFULL = 54,
            ENOANO = 55,
            EBADRQC = 56,
            EBADSLT = 57,
            EDEADLOCK = 58,
            EBFONT = 59,
            ENOSTR = 60,
            ENODATA = 61,
            ETIME = 62,
            ENOSR = 63,
            ENONET = 64,
            ENOPKG = 65,
            EREMOTE = 66,
            ENOLINK = 67,
            EADV = 68,
            ESRMNT = 69,
            ECOMM = 70,
            EPROTO = 71,
            EMULTIHOP = 72,
            EDOTDOT = 73,
            EBADMSG = 74,
            EOVERFLOW = 75,
            ENOTUNIQ = 76,
            EBADFD = 77,
            EREMCHG = 78,
            ELIBACC = 79,
            ELIBBAD = 80,
            ELIBSCN = 81,
            ELIBMAX = 82,
            ELIBEXEC = 83,
            EILSEQ = 84,
            ERESTART = 85,
            ESTRPIPE = 86,
            EUSERS = 87,
            ENOTSOCK = 88,
            EDESTADDRREQ = 89,
            EMSGSIZE = 90,
            EPROTOTYPE = 91,
            ENOPROTOOPT = 92,
            EPROTONOSUPPORT = 93,
            ESOCKTNOSUPPORT = 94,
            EOPNOTSUPP = 95,
            EPFNOSUPPORT = 96,
            EAFNOSUPPORT = 97,
            EADDRINUSE = 98,
            EADDRNOTAVAIL = 99,
            ENETDOWN = 100,
            ENETUNREACH = 101,
            ENETRESET = 102,
            ECONNABORTED = 103,
            ECONNRESET = 104,
            ENOBUFS = 105,
            EISCONN = 106,
            ENOTCONN = 107,
            ESHUTDOWN = 108,
            ETOOMANYREFS = 109,
            ETIMEDOUT = 110,
            ECONNREFUSED = 111,
            EHOSTDOWN = 112,
            EHOSTUNREACH = 113,
            EALREADY = 114,
            EINPROGRESS = 115,
            ESTALE = 116,
            EUCLEAN = 117,
            ENOTNAM = 118,
            ENAVAIL = 119,
            EISNAM = 120,
            EREMOTEIO = 121,
            EDQUOT = 122,
            ENOMEDIUM = 123,
            EMEDIUMTYPE = 124,
            ECANCELED = 125,
            ENOKEY = 126,
            EKEYEXPIRED = 127,
            EKEYREVOKED = 128,
            EKEYREJECTED = 129,
            EOWNERDEAD = 130,
            ENOTRECOVERABLE = 131,
            ERFKILL = 132,
            EHWPOISON = 133,
            _,
            pub const EWOULDBLOCK: Enum = .EAGAIN;
            pub const ENOTSUP: Enum = .EOPNOTSUPP;
        },
        // alpha
        // nios2
        // microblaze
        // openrisc
        // parisc
        // sh
        // um
        // @compileError("TODO: " ++ @tagName(v)),
        .avr,
        .bpfel,
        .bpfeb,
        .dxil,
        .msp430,
        .r600,
        .amdgcn,
        .tce,
        .tcele,
        .thumb,
        .thumbeb,
        .xcore,
        .nvptx,
        .nvptx64,
        .le32,
        .le64,
        .amdil,
        .amdil64,
        .hsail,
        .hsail64,
        .spir,
        .spir64,
        .spirv,
        .spirv32,
        .spirv64,
        .kalimba,
        .shave,
        .lanai,
        .wasm32,
        .wasm64,
        .renderscript32,
        .renderscript64,
        .ve,
        .spu_2,
        => unreachable,
    },
    .macos => enum(c_ushort) {
        EPERM = 1,
        ENOENT = 2,
        ESRCH = 3,
        EINTR = 4,
        EIO = 5,
        ENXIO = 6,
        E2BIG = 7,
        ENOEXEC = 8,
        EBADF = 9,
        ECHILD = 10,
        EDEADLK = 11,
        ENOMEM = 12,
        EACCES = 13,
        EFAULT = 14,
        ENOTBLK = 15,
        EBUSY = 16,
        EEXIST = 17,
        EXDEV = 18,
        ENODEV = 19,
        ENOTDIR = 20,
        EISDIR = 21,
        EINVAL = 22,
        ENFILE = 23,
        EMFILE = 24,
        ENOTTY = 25,
        ETXTBSY = 26,
        EFBIG = 27,
        ENOSPC = 28,
        ESPIPE = 29,
        EROFS = 30,
        EMLINK = 31,
        EPIPE = 32,
        EDOM = 33,
        ERANGE = 34,
        EAGAIN = 35,
        EINPROGRESS = 36,
        EALREADY = 37,
        ENOTSOCK = 38,
        EDESTADDRREQ = 39,
        EMSGSIZE = 40,
        EPROTOTYPE = 41,
        ENOPROTOOPT = 42,
        EPROTONOSUPPORT = 43,
        ESOCKTNOSUPPORT = 44,
        ENOTSUP = 45,
        EPFNOSUPPORT = 46,
        EAFNOSUPPORT = 47,
        EADDRINUSE = 48,
        EADDRNOTAVAIL = 49,
        ENETDOWN = 50,
        ENETUNREACH = 51,
        ENETRESET = 52,
        ECONNABORTED = 53,
        ECONNRESET = 54,
        ENOBUFS = 55,
        EISCONN = 56,
        ENOTCONN = 57,
        ESHUTDOWN = 58,
        ETOOMANYREFS = 59,
        ETIMEDOUT = 60,
        ECONNREFUSED = 61,
        ELOOP = 62,
        ENAMETOOLONG = 63,
        EHOSTDOWN = 64,
        EHOSTUNREACH = 65,
        ENOTEMPTY = 66,
        EPROCLIM = 67,
        EUSERS = 68,
        EDQUOT = 69,
        ESTALE = 70,
        EREMOTE = 71,
        EBADRPC = 72,
        ERPCMISMATCH = 73,
        EPROGUNAVAIL = 74,
        EPROGMISMATCH = 75,
        EPROCUNAVAIL = 76,
        ENOLCK = 77,
        ENOSYS = 78,
        EFTYPE = 79,
        EAUTH = 80,
        ENEEDAUTH = 81,
        EPWROFF = 82,
        EDEVERR = 83,
        EOVERFLOW = 84,
        EBADEXEC = 85,
        EBADARCH = 86,
        ESHLIBVERS = 87,
        EBADMACHO = 88,
        ECANCELED = 89,
        EIDRM = 90,
        ENOMSG = 91,
        EILSEQ = 92,
        ENOATTR = 93,
        EBADMSG = 94,
        EMULTIHOP = 95,
        ENODATA = 96,
        ENOLINK = 97,
        ENOSR = 98,
        ENOSTR = 99,
        EPROTO = 100,
        ETIME = 101,
        EOPNOTSUPP = 102,
        ENOPOLICY = 103,
        ENOTRECOVERABLE = 104,
        EOWNERDEAD = 105,
        EQFULL = 106,
        _,
        pub const EWOULDBLOCK: Enum = .EAGAIN;
    },
    .freebsd => enum(c_ushort) {
        EPERM = 1,
        ENOENT = 2,
        ESRCH = 3,
        EINTR = 4,
        EIO = 5,
        ENXIO = 6,
        E2BIG = 7,
        ENOEXEC = 8,
        EBADF = 9,
        ECHILD = 10,
        EDEADLK = 11,
        ENOMEM = 12,
        EACCES = 13,
        EFAULT = 14,
        ENOTBLK = 15,
        EBUSY = 16,
        EEXIST = 17,
        EXDEV = 18,
        ENODEV = 19,
        ENOTDIR = 20,
        EISDIR = 21,
        EINVAL = 22,
        ENFILE = 23,
        EMFILE = 24,
        ENOTTY = 25,
        ETXTBSY = 26,
        EFBIG = 27,
        ENOSPC = 28,
        ESPIPE = 29,
        EROFS = 30,
        EMLINK = 31,
        EPIPE = 32,
        EDOM = 33,
        ERANGE = 34,
        EAGAIN = 35,
        EINPROGRESS = 36,
        EALREADY = 37,
        ENOTSOCK = 38,
        EDESTADDRREQ = 39,
        EMSGSIZE = 40,
        EPROTOTYPE = 41,
        ENOPROTOOPT = 42,
        EPROTONOSUPPORT = 43,
        ESOCKTNOSUPPORT = 44,
        EOPNOTSUPP = 45,
        EPFNOSUPPORT = 46,
        EAFNOSUPPORT = 47,
        EADDRINUSE = 48,
        EADDRNOTAVAIL = 49,
        ENETDOWN = 50,
        ENETUNREACH = 51,
        ENETRESET = 52,
        ECONNABORTED = 53,
        ECONNRESET = 54,
        ENOBUFS = 55,
        EISCONN = 56,
        ENOTCONN = 57,
        ESHUTDOWN = 58,
        ETOOMANYREFS = 59,
        ETIMEDOUT = 60,
        ECONNREFUSED = 61,
        ELOOP = 62,
        ENAMETOOLONG = 63,
        EHOSTDOWN = 64,
        EHOSTUNREACH = 65,
        ENOTEMPTY = 66,
        EPROCLIM = 67,
        EUSERS = 68,
        EDQUOT = 69,
        ESTALE = 70,
        EREMOTE = 71,
        EBADRPC = 72,
        ERPCMISMATCH = 73,
        EPROGUNAVAIL = 74,
        EPROGMISMATCH = 75,
        EPROCUNAVAIL = 76,
        ENOLCK = 77,
        ENOSYS = 78,
        EFTYPE = 79,
        EAUTH = 80,
        ENEEDAUTH = 81,
        EIDRM = 82,
        ENOMSG = 83,
        EOVERFLOW = 84,
        ECANCELED = 85,
        EILSEQ = 86,
        ENOATTR = 87,
        EDOOFUS = 88,
        EBADMSG = 89,
        EMULTIHOP = 90,
        ENOLINK = 91,
        EPROTO = 92,
        ENOTCAPABLE = 93,
        ECAPMODE = 94,
        ENOTRECOVERABLE = 95,
        EOWNERDEAD = 96,
        EINTEGRITY = 97,
        _,
        pub const EWOULDBLOCK: Enum = .EAGAIN;
        pub const ENOTSUP: Enum = .EOPNOTSUPP;
    },
    .openbsd => enum(c_ushort) {
        EPERM = 1,
        ENOENT = 2,
        ESRCH = 3,
        EINTR = 4,
        EIO = 5,
        ENXIO = 6,
        E2BIG = 7,
        ENOEXEC = 8,
        EBADF = 9,
        ECHILD = 10,
        EDEADLK = 11,
        ENOMEM = 12,
        EACCES = 13,
        EFAULT = 14,
        ENOTBLK = 15,
        EBUSY = 16,
        EEXIST = 17,
        EXDEV = 18,
        ENODEV = 19,
        ENOTDIR = 20,
        EISDIR = 21,
        EINVAL = 22,
        ENFILE = 23,
        EMFILE = 24,
        ENOTTY = 25,
        ETXTBSY = 26,
        EFBIG = 27,
        ENOSPC = 28,
        ESPIPE = 29,
        EROFS = 30,
        EMLINK = 31,
        EPIPE = 32,
        EDOM = 33,
        ERANGE = 34,
        EAGAIN = 35,
        EINPROGRESS = 36,
        EALREADY = 37,
        ENOTSOCK = 38,
        EDESTADDRREQ = 39,
        EMSGSIZE = 40,
        EPROTOTYPE = 41,
        ENOPROTOOPT = 42,
        EPROTONOSUPPORT = 43,
        ESOCKTNOSUPPORT = 44,
        EOPNOTSUPP = 45,
        EPFNOSUPPORT = 46,
        EAFNOSUPPORT = 47,
        EADDRINUSE = 48,
        EADDRNOTAVAIL = 49,
        ENETDOWN = 50,
        ENETUNREACH = 51,
        ENETRESET = 52,
        ECONNABORTED = 53,
        ECONNRESET = 54,
        ENOBUFS = 55,
        EISCONN = 56,
        ENOTCONN = 57,
        ESHUTDOWN = 58,
        ETOOMANYREFS = 59,
        ETIMEDOUT = 60,
        ECONNREFUSED = 61,
        ELOOP = 62,
        ENAMETOOLONG = 63,
        EHOSTDOWN = 64,
        EHOSTUNREACH = 65,
        ENOTEMPTY = 66,
        EPROCLIM = 67,
        EUSERS = 68,
        EDQUOT = 69,
        ESTALE = 70,
        EREMOTE = 71,
        EBADRPC = 72,
        ERPCMISMATCH = 73,
        EPROGUNAVAIL = 74,
        EPROGMISMATCH = 75,
        EPROCUNAVAIL = 76,
        ENOLCK = 77,
        ENOSYS = 78,
        EFTYPE = 79,
        EAUTH = 80,
        ENEEDAUTH = 81,
        EIPSEC = 82,
        ENOATTR = 83,
        EILSEQ = 84,
        ENOMEDIUM = 85,
        EMEDIUMTYPE = 86,
        EOVERFLOW = 87,
        ECANCELED = 88,
        EIDRM = 89,
        ENOMSG = 90,
        ENOTSUP = 91,
        EBADMSG = 92,
        ENOTRECOVERABLE = 93,
        EOWNERDEAD = 94,
        EPROTO = 95,
        _,
        pub const EWOULDBLOCK: Enum = .EAGAIN;
    },
    .netbsd => enum(c_ushort) {
        EPERM = 1,
        ENOENT = 2,
        ESRCH = 3,
        EINTR = 4,
        EIO = 5,
        ENXIO = 6,
        E2BIG = 7,
        ENOEXEC = 8,
        EBADF = 9,
        ECHILD = 10,
        EDEADLK = 11,
        ENOMEM = 12,
        EACCES = 13,
        EFAULT = 14,
        ENOTBLK = 15,
        EBUSY = 16,
        EEXIST = 17,
        EXDEV = 18,
        ENODEV = 19,
        ENOTDIR = 20,
        EISDIR = 21,
        EINVAL = 22,
        ENFILE = 23,
        EMFILE = 24,
        ENOTTY = 25,
        ETXTBSY = 26,
        EFBIG = 27,
        ENOSPC = 28,
        ESPIPE = 29,
        EROFS = 30,
        EMLINK = 31,
        EPIPE = 32,
        EDOM = 33,
        ERANGE = 34,
        EAGAIN = 35,
        EINPROGRESS = 36,
        EALREADY = 37,
        ENOTSOCK = 38,
        EDESTADDRREQ = 39,
        EMSGSIZE = 40,
        EPROTOTYPE = 41,
        ENOPROTOOPT = 42,
        EPROTONOSUPPORT = 43,
        ESOCKTNOSUPPORT = 44,
        EOPNOTSUPP = 45,
        EPFNOSUPPORT = 46,
        EAFNOSUPPORT = 47,
        EADDRINUSE = 48,
        EADDRNOTAVAIL = 49,
        ENETDOWN = 50,
        ENETUNREACH = 51,
        ENETRESET = 52,
        ECONNABORTED = 53,
        ECONNRESET = 54,
        ENOBUFS = 55,
        EISCONN = 56,
        ENOTCONN = 57,
        ESHUTDOWN = 58,
        ETOOMANYREFS = 59,
        ETIMEDOUT = 60,
        ECONNREFUSED = 61,
        ELOOP = 62,
        ENAMETOOLONG = 63,
        EHOSTDOWN = 64,
        EHOSTUNREACH = 65,
        ENOTEMPTY = 66,
        EPROCLIM = 67,
        EUSERS = 68,
        EDQUOT = 69,
        ESTALE = 70,
        EREMOTE = 71,
        EBADRPC = 72,
        ERPCMISMATCH = 73,
        EPROGUNAVAIL = 74,
        EPROGMISMATCH = 75,
        EPROCUNAVAIL = 76,
        ENOLCK = 77,
        ENOSYS = 78,
        EFTYPE = 79,
        EAUTH = 80,
        ENEEDAUTH = 81,
        EIDRM = 82,
        ENOMSG = 83,
        EOVERFLOW = 84,
        EILSEQ = 85,
        ENOTSUP = 86,
        ECANCELED = 87,
        EBADMSG = 88,
        ENODATA = 89,
        ENOSR = 90,
        ENOSTR = 91,
        ETIME = 92,
        ENOATTR = 93,
        EMULTIHOP = 94,
        ENOLINK = 95,
        EPROTO = 96,
        EOWNERDEAD = 97,
        ENOTRECOVERABLE = 98,
        _,
        pub const EWOULDBLOCK: Enum = .EAGAIN;
    },
    else => |v| @compileError("TODO: " ++ @tagName(v)),
};

pub const Error = blk: {
    const Type = std.builtin.Type;
    const fields = std.meta.fields(Enum);
    var errors: [fields.len + 1]Type.Error = undefined;
    for (fields, 0..) |field, i| {
        errors[i] = .{ .name = field.name };
    }
    errors[fields.len] = .{ .name = "Unexpected" };
    break :blk @Type(@unionInit(Type, "ErrorSet", &errors));
};

pub fn error_by_name(name: string) ?Error {
    inline for (comptime std.meta.fieldNames(Error)) |field_name| {
        if (std.mem.eql(u8, name, field_name)) {
            return @field(Error, field_name);
        }
    }
    return null;
}

const map = blk: {
    const KV = struct { string, Error };
    var kvs: []const KV = &.{};
    for (std.meta.fields(Enum)) |field| {
        kvs = kvs ++ &[1]KV{.{ field.name, @field(Error, field.name) }};
    }
    break :blk std.StaticStringMap(Error).initComptime(kvs);
};

pub fn errorFromInt(code: c_int) Error {
    return map.get(std.enums.tagName(Enum, @enumFromInt(code)) orelse return error.Unexpected).?;
}

const __errno_location_name = switch (builtin.target.os.tag) {
    .linux,
    => "__errno_location",
    .macos,
    .freebsd,
    => "__error",
    .openbsd,
    .netbsd,
    => "__errno",
    else => |v| @compileError("TODO: " ++ @tagName(v)),
};

const __errno_location = @extern(*const fn () callconv(.C) *c_int, std.builtin.ExternOptions{
    .name = __errno_location_name,
    .library_name = "c",
});

pub fn get_from_libc() c_int {
    return __errno_location().*;
}
